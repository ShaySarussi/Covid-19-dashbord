{"ast":null,"code":"import axios from 'axios';\nconst url = 'http://coronavirus-19-api.herokuapp.com';\nexport const fetchData = async (country = 'Israel') => {\n  let changeableUrl = url;\n  changeableUrl = `${url}/countries/${country}`;\n\n  try {\n    const {\n      data: {\n        cases,\n        recovered,\n        deaths,\n        active,\n        critical,\n        casesPerOneMillion,\n        deathsPerOneMillion,\n        totalTests,\n        testsPerOneMillion\n      }\n    } = await axios.get(changeableUrl);\n    return {\n      cases,\n      recovered,\n      deaths,\n      active,\n      critical,\n      casesPerOneMillion,\n      deathsPerOneMillion,\n      totalTests,\n      testsPerOneMillion\n    };\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["C:/Users/rotem/covid/src/api/index.js"],"names":["axios","url","fetchData","country","changeableUrl","data","cases","recovered","deaths","active","critical","casesPerOneMillion","deathsPerOneMillion","totalTests","testsPerOneMillion","get","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,GAAG,GAAG,yCAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAOC,OAAO,GAAG,QAAjB,KAA8B;AACrD,MAAIC,aAAa,GAAGH,GAApB;AAGAG,EAAAA,aAAa,GAAI,GAAEH,GAAI,cAAaE,OAAQ,EAA5C;;AAGA,MAAI;AACF,UAAM;AAAEE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA,SAAT;AAAoBC,QAAAA,MAApB;AAA2BC,QAAAA,MAA3B;AAAkCC,QAAAA,QAAlC;AAA2CC,QAAAA,kBAA3C;AAA8DC,QAAAA,mBAA9D;AAAkFC,QAAAA,UAAlF;AAA6FC,QAAAA;AAA7F;AAAR,QAA6H,MAAMd,KAAK,CAACe,GAAN,CAAUX,aAAV,CAAzI;AACA,WAAO;AAAEE,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,MAApB;AAA2BC,MAAAA,MAA3B;AAAkCC,MAAAA,QAAlC;AAA2CC,MAAAA,kBAA3C;AAA8DC,MAAAA,mBAA9D;AAAkFC,MAAAA,UAAlF;AAA6FC,MAAAA;AAA7F,KAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAbM","sourcesContent":["import axios from 'axios';\n\n\nconst url = 'http://coronavirus-19-api.herokuapp.com';\n\nexport const fetchData = async (country = 'Israel') => {\n  let changeableUrl = url;\n\n  \n  changeableUrl = `${url}/countries/${country}`;\n  \n\n  try {\n    const { data: { cases, recovered, deaths,active,critical,casesPerOneMillion,deathsPerOneMillion,totalTests,testsPerOneMillion} } = await axios.get(changeableUrl);\n    return { cases, recovered, deaths,active,critical,casesPerOneMillion,deathsPerOneMillion,totalTests,testsPerOneMillion };\n  } catch (error) {\n    return error;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}